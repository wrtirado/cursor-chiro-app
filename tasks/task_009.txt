# Task ID: 9
# Title: Payment Processing API with HIPAA Compliance
# Status: pending
# Dependencies: 5
# Priority: medium
# Description: Integrate payment processing for the SaaS provider to bill individual Offices for software usage. This involves managing subscription status and payment provider details at the Office level, and integrating with a payment gateway. Your SaaS payment provider API keys will be stored in .env, not the database.
# Details:
Integrate with a payment gateway (e.g., Stripe) for processing subscription payments at the Office level. Store subscription status and billing information in the Office table while keeping payment provider API keys in .env files for security. Create endpoints for subscription management and payment processing with appropriate RBAC controls. Implement billing records and invoice generation with minimal ePHI inclusion. Set up webhook handlers for payment events with audit logging. Ensure all payment data transmission uses TLS 1.2+ encryption. Implement detailed audit trails for all payment transactions. Develop functionality to track subscription status, billing cycles, and payment history for each Office.

# Test Strategy:
Test subscription billing with test credentials. Verify proper recording of subscription status and billing information at the Office level. Test subscription creation, updates, and cancellations. Ensure proper error handling for failed payments. Validate that payment configurations are correctly loaded from environment variables. Verify audit logs are created for all payment actions. Test RBAC to ensure only authorized users can access payment information. Validate that all API communications use proper encryption. Test webhook handling for payment events from the payment gateway.

# Subtasks:
## 1. Revert `payment_config` from `Company` Model & Clean Alembic [done]
### Dependencies: None
### Description: Remove the `payment_config` JSON column from the `Company` model in `api/models/base.py`. Create a new Alembic migration to reflect this removal or ensure the previous migration that added it is cleanly reversed/removed if no other changes depend on it.
### Details:


## 2. Define and Add Subscription Fields to `Office` Model [pending]
### Dependencies: None
### Description: Define necessary fields for office-level subscriptions (e.g., `subscription_status`, `payment_provider_customer_id`, `payment_provider_subscription_id`, `current_plan_id`, `billing_cycle_anchor_date`). Add these fields to the `Office` model in `api/models/base.py`.
### Details:


## 3. Generate Alembic Migration for `Office` Subscription Fields [pending]
### Dependencies: None
### Description: After adding subscription-related fields to the `Office` model, generate a new Alembic migration script to apply these changes to the database schema.
### Details:


## 4. HIPAA-Compliant Audit Logging for Billing Events [pending]
### Dependencies: None
### Description: Implement detailed audit trails for all office-level subscription and billing-related operations (e.g., subscription creation, status changes, payment attempts) using libSQL/SQLite.
### Details:


## 5. Verify BAA with Chosen SaaS Payment Processor [pending]
### Dependencies: None
### Description: Ensure a Business Associate Agreement (BAA) is in place with the payment gateway provider selected for handling the SaaS subscription billing for offices.
### Details:


## 6. Secure Storage and Transmission of Payment Provider References [pending]
### Dependencies: None
### Description: Ensure any stored references to payment provider entities (e.g., customer IDs for offices, subscription IDs) are handled securely within the database. All data transmission related to billing (e.g., to/from payment gateway) must use TLS 1.2+.
### Details:


## 7. Data Minimization for SaaS Invoices to Offices [pending]
### Dependencies: None
### Description: Implement practices to limit unnecessary data exposure in invoices generated by the SaaS for its customers (Offices), aligning with privacy principles.
### Details:


