version: "3.8"

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changethis}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    ports:
      - "5432:5432"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin} # Default credentials
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app # Mount API source code
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changethis}@db:5432/${POSTGRES_DB:-app_db}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-minio:9000}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-therapy-media}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
    depends_on:
      - db
      - minio
    networks:
      - app-network
    # Add stdin_open and tty for API development if needed for debugging/interaction
    # stdin_open: true
    # tty: true

volumes:
  postgres_data:
  minio_data:

networks:
  app-network:
    driver: bridge
